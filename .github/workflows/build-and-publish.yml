name: Build & Publish

on:
  workflow_dispatch:
  schedule:
    - cron: '51 15 * * *'  # 3:51 AM NZST (18:51 UTC previous day)
    - cron: '51 18 * * *'  # 6:51 AM NZST (18:51 UTC previous day)
    - cron: '51 21 * * *'  # 9:51 AM NZST (21:51 UTC previous day)
    - cron: '30 09 * * *'  # 9:30 PM NZST (09:30 UTC same day)

permissions:
  contents: write   # required so we can push to current repo

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      NODE_ENV: production
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/.tmp-gcp-key.json
      WEBSITE_REPO: maysaleba/maysaleba.github.io

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Detect if GCP secret exists
      - name: Detect GCP secret
        id: gcp
        env:
          GCP_JSON: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
        run: |
          if [ -n "$GCP_JSON" ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up GCP credentials (if provided)
        if: ${{ steps.gcp.outputs.present == 'true' }}
        env:
          GCP_JSON: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
        run: |
          printf '%s' "$GCP_JSON" > "$GOOGLE_APPLICATION_CREDENTIALS"

      # =========================
      # Parallel region fetches
      # =========================
      - name: Fetch all regions in parallel
        shell: bash
        run: |
          set -euo pipefail
      
          run_eu() { echo "=== EU start ==="; node fetch_eu.js; echo "=== EU done ==="; }
          run_hk() { echo "=== HK start ==="; node fetch_hk.js; node fetchProductCodesHK.js; echo "=== HK done ==="; }
          run_jp() { echo "=== JP start ==="; node fetch_jp.js; node fetchProductCodesJP.js; echo "=== JP done ==="; }
          run_us() { echo "=== US start ==="; node fetch_us.js; node fetchProductCodesUS.js; echo "=== US done ==="; }
      
          run_eu &  PID_EU=$!
          run_hk &  PID_HK=$!
          run_jp &  PID_JP=$!
          run_us &  PID_US=$!
      
          wait $PID_EU $PID_HK $PID_JP $PID_US

      - name: Verify regional outputs exist
        shell: bash
        run: |
          set -e
          echo "Files in data/:"
          ls -lh data || true
          for f in eu_games_enriched.json hk_games_enriched.json jp_games_enriched.json us_games_enriched.json; do
            test -f "data/$f" || { echo "Missing data/$f"; exit 1; }
          done
          echo "All regional outputs present in data/."

      # =========================
      # Downstream pipeline
      # =========================
      - name: Merge (enriched)
        run: node merge_enriched.js

      - name: Upload unmatched merge log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: merge-unmatched-log
          path: logs/merge_unmatched.log

      - name: Get Prices
        run: node getPrices.js

      - name: Sync & Build csvjson
        run: node sync_build_csvjson.js

      - name: Google Analytics enrich (popularity / re-sort)
        run: node google_analytics.js

      # =========================
      # Commit outputs back to THIS repo
      # =========================
      - name: Commit outputs to this repo
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
          echo "Sanity check for generated files:"
          ls -lh data || true
          ls -lh output || true
      
          git add \
            data/eu_games_enriched.json \
            data/hk_games_enriched.json \
            data/jp_games_enriched.json \
            data/us_games_enriched.json \
            output/merged_enriched.json \
            output/merged_enriched_with_prices.json
      
          if ! git diff --cached --quiet; then
            git commit -m "CI: update enriched & regional outputs [skip ci]"
            git push
          else
            echo "No changes to commit to self repo."
          fi

      # =========================
      # Publish csvjson.json + csvjson.csv to website repo (under src/)
      # =========================
      - name: Push to website repo (maysaleba.github.io)
        env:
          PAT: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        shell: bash
        run: |
          set -e
          : "${PAT:?PERSONAL_ACCESS_TOKEN secret is required to push to website repo}"

          # Sanity check
          ls -lh csvjson.json csvjson.csv

          git clone --depth 1 "https://x-access-token:${PAT}@github.com/${WEBSITE_REPO}.git" publish

          mkdir -p publish/src
          cp -f csvjson.json csvjson.csv publish/src/

          cd publish
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add src/csvjson.json src/csvjson.csv

          if ! git diff --cached --quiet; then
            git commit -m "CI: update csvjson artifacts under src/"
            git push origin HEAD
          else
            echo "No website changes to publish."
          fi

      - name: Cleanup temp GCP key
        if: ${{ always() && steps.gcp.outputs.present == 'true' }}
        run: rm -f "$GOOGLE_APPLICATION_CREDENTIALS"
